<?php
namespace Helhum\T3Satis\Test\Converter;

require_once __DIR__ . '/../../../../../../Classes/Helhum/T3Satis/TYPO3/Extension/EmConfReader.php';

/***************************************************************
 *  Copyright notice
 *
 *  (c) 2014 Helmut Hummel <helmut.hummel@typo3.org>
 *  All rights reserved
 *
 *  This script is part of the TYPO3 project. The TYPO3 project is
 *  free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  The GNU General Public License can be found at
 *  http://www.gnu.org/copyleft/gpl.html.
 *  A copy is found in the text file GPL.txt and important notices to the license
 *  from the author is found in LICENSE.txt distributed with these scripts.
 *
 *
 *  This script is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  This copyright notice MUST APPEAR in all copies of the script!
 ***************************************************************/

use Helhum\T3Satis\TYPO3\Extension\EmConfReader;

/**
 * Class EmConfToJsonConverter
 */
class EmConfToJsonConverterTest extends \PHPUnit_Framework_TestCase {

	/**
	 * @var EmConfReader
	 */
	protected $subject;

	public function setUp() {
		$this->subject = new EmConfReader();
	}


	public function emConfDataProvider() {
		$emConf = <<<EOF
<?php

/***************************************************************
 * Extension Manager/Repository config file for ext "extension_builder".
 *
 * Auto generated 13-05-2014 05:27
 *
 * Manual updates:
 * Only the data in the array - everything else is removed by next
 * writing. "version" and "dependencies" must not be touched!
 ***************************************************************/

\$EM_CONF[\$_EXTKEY] = Array (
	'title' => 'Extension Builder',
	'description' => 'The Extension Builder helps you build
and manage your Extbase based TYPO3 extensions.',
	'category' => 'module',
	'author' => 'Nico de Haen',
	'author_email' => 'mail@ndh-websolutions.de',
	'shy' => '',
	'state' => 'beta',
	'uploadfolder' => 1,
	'createDirs' => 'uploads/tx_extensionbuilder/backups',
	'modify_tables' => '',
	'clearCacheOnLoad' => 0,
	'lockType' => '',
	'version' => '6.2.0', // Don't modify this
	'constraints' => array (
		'depends' => array (
			'typo3' => '6.1.0-6.2.99'
		),
		'conflicts' => array	(
		),
		'suggests' => array(
			'phpunit' => '',
		),
	),
);
EOF;
		$emConf2 = <<<EOF
<?php

/*********************************************************************
* Extension configuration file for ext "realurl".
*
* Generated by ext 17-02-2014 12:13 UTC
*
* https://github.com/t3elmar/Ext
*********************************************************************/

\$EM_CONF[\$_EXTKEY] = array (
  'title' => 'RealURL: speaking paths for TYPO3',
  'description' => 'Creates nice looking URLs for TYPO3 pages: converts http://example.com/index.phpid=12345&L=2 to http://example.com/path/to/your/page/. Please, ask for free support in TYPO3 mailing lists or contact the maintainer for paid support.',
  'category' => 'fe',
  'shy' => 0,
  'dependencies' => '',
  'conflicts' => 'cooluri,simulatestatic',
  'priority' => '',
  'loadOrder' => '',
  'module' => '',
  'state' => 'alpha',
  'internal' => 0,
  'uploadfolder' => 0,
  'createDirs' => '',
  'modify_tables' => 'pages,sys_domain,pages_language_overlay,sys_template',
  'clearCacheOnLoad' => 1,
  'lockType' => '',
  'author' => 'Dmitry Dulepov',
  'author_email' => 'dmitry.dulepov@gmail.com',
  'author_company' => '',
  'CGLcompliance' => '',
  'CGLcompliance_note' => '',
  'version' => '1.12.8',
  '_md5_values_when_last_written' => '',
  'constraints' =>
  array (
    'depends' =>
    array (
      'php' => '5.3.7-5.5.999',
      'typo3' => '6.2.6-7.99.99',
    ),
    'conflicts' =>
    array (
      'cooluri' => '',
      'simulatestatic' => '',
    ),
    'suggests' =>
    array (
      'static_info_tables' => '2.0.2-',
    ),
  ),
  'suggests' =>
  array (
  ),
);

EOF;


		return array(
			array($emConf),
			array($emConf2)
		);
	}

	/**
	 * @param string $emConfString
     * @test
	 * @dataProvider emConfDataProvider
	 */
	public function testConversion($emConfString) {
		$extensionConfiguration = $this->subject->readFromString($emConfString);
		$this->assertTrue(is_array($extensionConfiguration));
	}

}